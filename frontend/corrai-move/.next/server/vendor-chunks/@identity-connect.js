"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@identity-connect";
exports.ids = ["vendor-chunks/@identity-connect"];
exports.modules = {

/***/ "(ssr)/./node_modules/@identity-connect/api/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@identity-connect/api/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_BACKEND_URL: () => (/* binding */ DEFAULT_BACKEND_URL),\n/* harmony export */   NetworkName: () => (/* binding */ NetworkName),\n/* harmony export */   PairingStatus: () => (/* binding */ PairingStatus),\n/* harmony export */   SigningRequestStatus: () => (/* binding */ SigningRequestStatus),\n/* harmony export */   SigningRequestTypes: () => (/* binding */ SigningRequestTypes),\n/* harmony export */   WalletOSEnum: () => (/* binding */ WalletOSEnum),\n/* harmony export */   WalletPlatformEnum: () => (/* binding */ WalletPlatformEnum)\n/* harmony export */ });\n// src/constants.ts\nvar DEFAULT_BACKEND_URL = \"https://identityconnect.com\";\n\n// src/network.ts\nvar NetworkName = /* @__PURE__ */ ((NetworkName2) => {\n  NetworkName2[\"DEVNET\"] = \"devnet\";\n  NetworkName2[\"MAINNET\"] = \"mainnet\";\n  NetworkName2[\"TESTNET\"] = \"testnet\";\n  return NetworkName2;\n})(NetworkName || {});\n\n// src/types/pairing.ts\nvar PairingStatus = /* @__PURE__ */ ((PairingStatus2) => {\n  PairingStatus2[\"Finalized\"] = \"FINALIZED\";\n  PairingStatus2[\"Pending\"] = \"PENDING\";\n  return PairingStatus2;\n})(PairingStatus || {});\n\n// src/types/signingRequest.ts\nvar SigningRequestTypes = /* @__PURE__ */ ((SigningRequestTypes2) => {\n  SigningRequestTypes2[\"SIGN_AND_SUBMIT_TRANSACTION\"] = \"SIGN_AND_SUBMIT_TRANSACTION\";\n  SigningRequestTypes2[\"SIGN_MESSAGE\"] = \"SIGN_MESSAGE\";\n  SigningRequestTypes2[\"SIGN_TRANSACTION\"] = \"SIGN_TRANSACTION\";\n  return SigningRequestTypes2;\n})(SigningRequestTypes || {});\nvar SigningRequestStatus = /* @__PURE__ */ ((SigningRequestStatus2) => {\n  SigningRequestStatus2[\"APPROVED\"] = \"APPROVED\";\n  SigningRequestStatus2[\"CANCELLED\"] = \"CANCELLED\";\n  SigningRequestStatus2[\"INVALID\"] = \"INVALID\";\n  SigningRequestStatus2[\"PENDING\"] = \"PENDING\";\n  SigningRequestStatus2[\"REJECTED\"] = \"REJECTED\";\n  return SigningRequestStatus2;\n})(SigningRequestStatus || {});\n\n// src/types/wallet.ts\nvar WalletOSEnum = /* @__PURE__ */ ((WalletOSEnum2) => {\n  WalletOSEnum2[\"Android\"] = \"android\";\n  WalletOSEnum2[\"IdentityConnect\"] = \"ic\";\n  WalletOSEnum2[\"Linux\"] = \"linux\";\n  WalletOSEnum2[\"Macos\"] = \"osx\";\n  WalletOSEnum2[\"Windows\"] = \"win\";\n  WalletOSEnum2[\"iOS\"] = \"ios\";\n  return WalletOSEnum2;\n})(WalletOSEnum || {});\nvar WalletPlatformEnum = /* @__PURE__ */ ((WalletPlatformEnum2) => {\n  WalletPlatformEnum2[\"BraveExtension\"] = \"brave-extension\";\n  WalletPlatformEnum2[\"ChromeExtension\"] = \"chrome-extension\";\n  WalletPlatformEnum2[\"FirefoxExtension\"] = \"firefox-extension\";\n  WalletPlatformEnum2[\"IcDappWallet\"] = \"ic-dapp-wallet\";\n  WalletPlatformEnum2[\"KiwiExtension\"] = \"kiwi-extension\";\n  WalletPlatformEnum2[\"NativeApp\"] = \"native-app\";\n  WalletPlatformEnum2[\"OperaExtension\"] = \"opera-extension\";\n  WalletPlatformEnum2[\"SafariExtension\"] = \"safari-extension\";\n  return WalletPlatformEnum2;\n})(WalletPlatformEnum || {});\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlkZW50aXR5LWNvbm5lY3QvYXBpL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsbUJBQW1COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxxQkFBcUI7O0FBRXRCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMkJBQTJCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0QkFBNEI7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0JBQW9CO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQkFBMEI7QUFTekI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0BhcHRvcy1sYWJzL3dhbGxldC1hZGFwdGVyLW5leHRqcy1leGFtcGxlLy4vbm9kZV9tb2R1bGVzL0BpZGVudGl0eS1jb25uZWN0L2FwaS9kaXN0L2luZGV4Lm1qcz9kNzYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb25zdGFudHMudHNcbnZhciBERUZBVUxUX0JBQ0tFTkRfVVJMID0gXCJodHRwczovL2lkZW50aXR5Y29ubmVjdC5jb21cIjtcblxuLy8gc3JjL25ldHdvcmsudHNcbnZhciBOZXR3b3JrTmFtZSA9IC8qIEBfX1BVUkVfXyAqLyAoKE5ldHdvcmtOYW1lMikgPT4ge1xuICBOZXR3b3JrTmFtZTJbXCJERVZORVRcIl0gPSBcImRldm5ldFwiO1xuICBOZXR3b3JrTmFtZTJbXCJNQUlOTkVUXCJdID0gXCJtYWlubmV0XCI7XG4gIE5ldHdvcmtOYW1lMltcIlRFU1RORVRcIl0gPSBcInRlc3RuZXRcIjtcbiAgcmV0dXJuIE5ldHdvcmtOYW1lMjtcbn0pKE5ldHdvcmtOYW1lIHx8IHt9KTtcblxuLy8gc3JjL3R5cGVzL3BhaXJpbmcudHNcbnZhciBQYWlyaW5nU3RhdHVzID0gLyogQF9fUFVSRV9fICovICgoUGFpcmluZ1N0YXR1czIpID0+IHtcbiAgUGFpcmluZ1N0YXR1czJbXCJGaW5hbGl6ZWRcIl0gPSBcIkZJTkFMSVpFRFwiO1xuICBQYWlyaW5nU3RhdHVzMltcIlBlbmRpbmdcIl0gPSBcIlBFTkRJTkdcIjtcbiAgcmV0dXJuIFBhaXJpbmdTdGF0dXMyO1xufSkoUGFpcmluZ1N0YXR1cyB8fCB7fSk7XG5cbi8vIHNyYy90eXBlcy9zaWduaW5nUmVxdWVzdC50c1xudmFyIFNpZ25pbmdSZXF1ZXN0VHlwZXMgPSAvKiBAX19QVVJFX18gKi8gKChTaWduaW5nUmVxdWVzdFR5cGVzMikgPT4ge1xuICBTaWduaW5nUmVxdWVzdFR5cGVzMltcIlNJR05fQU5EX1NVQk1JVF9UUkFOU0FDVElPTlwiXSA9IFwiU0lHTl9BTkRfU1VCTUlUX1RSQU5TQUNUSU9OXCI7XG4gIFNpZ25pbmdSZXF1ZXN0VHlwZXMyW1wiU0lHTl9NRVNTQUdFXCJdID0gXCJTSUdOX01FU1NBR0VcIjtcbiAgU2lnbmluZ1JlcXVlc3RUeXBlczJbXCJTSUdOX1RSQU5TQUNUSU9OXCJdID0gXCJTSUdOX1RSQU5TQUNUSU9OXCI7XG4gIHJldHVybiBTaWduaW5nUmVxdWVzdFR5cGVzMjtcbn0pKFNpZ25pbmdSZXF1ZXN0VHlwZXMgfHwge30pO1xudmFyIFNpZ25pbmdSZXF1ZXN0U3RhdHVzID0gLyogQF9fUFVSRV9fICovICgoU2lnbmluZ1JlcXVlc3RTdGF0dXMyKSA9PiB7XG4gIFNpZ25pbmdSZXF1ZXN0U3RhdHVzMltcIkFQUFJPVkVEXCJdID0gXCJBUFBST1ZFRFwiO1xuICBTaWduaW5nUmVxdWVzdFN0YXR1czJbXCJDQU5DRUxMRURcIl0gPSBcIkNBTkNFTExFRFwiO1xuICBTaWduaW5nUmVxdWVzdFN0YXR1czJbXCJJTlZBTElEXCJdID0gXCJJTlZBTElEXCI7XG4gIFNpZ25pbmdSZXF1ZXN0U3RhdHVzMltcIlBFTkRJTkdcIl0gPSBcIlBFTkRJTkdcIjtcbiAgU2lnbmluZ1JlcXVlc3RTdGF0dXMyW1wiUkVKRUNURURcIl0gPSBcIlJFSkVDVEVEXCI7XG4gIHJldHVybiBTaWduaW5nUmVxdWVzdFN0YXR1czI7XG59KShTaWduaW5nUmVxdWVzdFN0YXR1cyB8fCB7fSk7XG5cbi8vIHNyYy90eXBlcy93YWxsZXQudHNcbnZhciBXYWxsZXRPU0VudW0gPSAvKiBAX19QVVJFX18gKi8gKChXYWxsZXRPU0VudW0yKSA9PiB7XG4gIFdhbGxldE9TRW51bTJbXCJBbmRyb2lkXCJdID0gXCJhbmRyb2lkXCI7XG4gIFdhbGxldE9TRW51bTJbXCJJZGVudGl0eUNvbm5lY3RcIl0gPSBcImljXCI7XG4gIFdhbGxldE9TRW51bTJbXCJMaW51eFwiXSA9IFwibGludXhcIjtcbiAgV2FsbGV0T1NFbnVtMltcIk1hY29zXCJdID0gXCJvc3hcIjtcbiAgV2FsbGV0T1NFbnVtMltcIldpbmRvd3NcIl0gPSBcIndpblwiO1xuICBXYWxsZXRPU0VudW0yW1wiaU9TXCJdID0gXCJpb3NcIjtcbiAgcmV0dXJuIFdhbGxldE9TRW51bTI7XG59KShXYWxsZXRPU0VudW0gfHwge30pO1xudmFyIFdhbGxldFBsYXRmb3JtRW51bSA9IC8qIEBfX1BVUkVfXyAqLyAoKFdhbGxldFBsYXRmb3JtRW51bTIpID0+IHtcbiAgV2FsbGV0UGxhdGZvcm1FbnVtMltcIkJyYXZlRXh0ZW5zaW9uXCJdID0gXCJicmF2ZS1leHRlbnNpb25cIjtcbiAgV2FsbGV0UGxhdGZvcm1FbnVtMltcIkNocm9tZUV4dGVuc2lvblwiXSA9IFwiY2hyb21lLWV4dGVuc2lvblwiO1xuICBXYWxsZXRQbGF0Zm9ybUVudW0yW1wiRmlyZWZveEV4dGVuc2lvblwiXSA9IFwiZmlyZWZveC1leHRlbnNpb25cIjtcbiAgV2FsbGV0UGxhdGZvcm1FbnVtMltcIkljRGFwcFdhbGxldFwiXSA9IFwiaWMtZGFwcC13YWxsZXRcIjtcbiAgV2FsbGV0UGxhdGZvcm1FbnVtMltcIktpd2lFeHRlbnNpb25cIl0gPSBcImtpd2ktZXh0ZW5zaW9uXCI7XG4gIFdhbGxldFBsYXRmb3JtRW51bTJbXCJOYXRpdmVBcHBcIl0gPSBcIm5hdGl2ZS1hcHBcIjtcbiAgV2FsbGV0UGxhdGZvcm1FbnVtMltcIk9wZXJhRXh0ZW5zaW9uXCJdID0gXCJvcGVyYS1leHRlbnNpb25cIjtcbiAgV2FsbGV0UGxhdGZvcm1FbnVtMltcIlNhZmFyaUV4dGVuc2lvblwiXSA9IFwic2FmYXJpLWV4dGVuc2lvblwiO1xuICByZXR1cm4gV2FsbGV0UGxhdGZvcm1FbnVtMjtcbn0pKFdhbGxldFBsYXRmb3JtRW51bSB8fCB7fSk7XG5leHBvcnQge1xuICBERUZBVUxUX0JBQ0tFTkRfVVJMLFxuICBOZXR3b3JrTmFtZSxcbiAgUGFpcmluZ1N0YXR1cyxcbiAgU2lnbmluZ1JlcXVlc3RTdGF0dXMsXG4gIFNpZ25pbmdSZXF1ZXN0VHlwZXMsXG4gIFdhbGxldE9TRW51bSxcbiAgV2FsbGV0UGxhdGZvcm1FbnVtXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@identity-connect/api/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@identity-connect/crypto/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@identity-connect/crypto/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountConnectionAction: () => (/* binding */ AccountConnectionAction),\n/* harmony export */   DecryptionError: () => (/* binding */ DecryptionError),\n/* harmony export */   EncryptionEnvelopeError: () => (/* binding */ EncryptionEnvelopeError),\n/* harmony export */   EnvelopeMessageMismatchError: () => (/* binding */ EnvelopeMessageMismatchError),\n/* harmony export */   KeyTypes: () => (/* binding */ KeyTypes),\n/* harmony export */   REQUIRED_FIELDS: () => (/* binding */ REQUIRED_FIELDS),\n/* harmony export */   SIGNATURE_PREFIX: () => (/* binding */ SIGNATURE_PREFIX),\n/* harmony export */   aptosAccountToEd25519Keypair: () => (/* binding */ aptosAccountToEd25519Keypair),\n/* harmony export */   aptosAccountToSerializedInfo: () => (/* binding */ aptosAccountToSerializedInfo),\n/* harmony export */   concatUint8array: () => (/* binding */ concatUint8array),\n/* harmony export */   constructMetadata: () => (/* binding */ constructMetadata),\n/* harmony export */   convertEd25519PublicKeyToX25519PublicKey: () => (/* binding */ convertEd25519PublicKeyToX25519PublicKey),\n/* harmony export */   convertEd25519SecretKeyToX25519SecretKey: () => (/* binding */ convertEd25519SecretKeyToX25519SecretKey),\n/* harmony export */   createEd25519KeyPair: () => (/* binding */ createEd25519KeyPair),\n/* harmony export */   createSerializedAccountInfo: () => (/* binding */ createSerializedAccountInfo),\n/* harmony export */   createX25519KeyPair: () => (/* binding */ createX25519KeyPair),\n/* harmony export */   dangerouslyEncryptAndSignEnvelopeUnvalidated: () => (/* binding */ dangerouslyEncryptAndSignEnvelopeUnvalidated),\n/* harmony export */   decodeBase64: () => (/* binding */ decodeBase64),\n/* harmony export */   decryptEnvelope: () => (/* binding */ decryptEnvelope),\n/* harmony export */   decryptMessage: () => (/* binding */ decryptMessage),\n/* harmony export */   decryptMessageDirect: () => (/* binding */ decryptMessageDirect),\n/* harmony export */   decryptObject: () => (/* binding */ decryptObject),\n/* harmony export */   decryptObjectDirect: () => (/* binding */ decryptObjectDirect),\n/* harmony export */   decryptSerializedEncryptionResult: () => (/* binding */ decryptSerializedEncryptionResult),\n/* harmony export */   decryptSerializedEncryptionResultDirect: () => (/* binding */ decryptSerializedEncryptionResultDirect),\n/* harmony export */   deriveAccountTransportEd25519Keypair: () => (/* binding */ deriveAccountTransportEd25519Keypair),\n/* harmony export */   deserializeEd25519PublicKeyB64: () => (/* binding */ deserializeEd25519PublicKeyB64),\n/* harmony export */   deserializeEd25519SignatureB64: () => (/* binding */ deserializeEd25519SignatureB64),\n/* harmony export */   deserializeEncryptionResult: () => (/* binding */ deserializeEncryptionResult),\n/* harmony export */   deserializePublicKeyB64: () => (/* binding */ deserializePublicKeyB64),\n/* harmony export */   deserializeSignatureB64: () => (/* binding */ deserializeSignatureB64),\n/* harmony export */   deserializeTransportEnvelope: () => (/* binding */ deserializeTransportEnvelope),\n/* harmony export */   ed25519KeypairFromSecret: () => (/* binding */ ed25519KeypairFromSecret),\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64),\n/* harmony export */   encryptAndSignEnvelope: () => (/* binding */ encryptAndSignEnvelope),\n/* harmony export */   encryptMessage: () => (/* binding */ encryptMessage),\n/* harmony export */   encryptMessageDirect: () => (/* binding */ encryptMessageDirect),\n/* harmony export */   encryptObject: () => (/* binding */ encryptObject),\n/* harmony export */   encryptObjectDirect: () => (/* binding */ encryptObjectDirect),\n/* harmony export */   ensureMetadataFields: () => (/* binding */ ensureMetadataFields),\n/* harmony export */   ensurePrivatePublicFieldsDisjoint: () => (/* binding */ ensurePrivatePublicFieldsDisjoint),\n/* harmony export */   hashAndVerifySignature: () => (/* binding */ hashAndVerifySignature),\n/* harmony export */   keypairToEd25519: () => (/* binding */ keypairToEd25519),\n/* harmony export */   keypairToX25519: () => (/* binding */ keypairToX25519),\n/* harmony export */   makeEd25519SecretKeySignCallbackNoDomainSeparation: () => (/* binding */ makeEd25519SecretKeySignCallbackNoDomainSeparation),\n/* harmony export */   messageHash: () => (/* binding */ messageHash),\n/* harmony export */   publicKeyB64FromEd25519PublicKeyB64: () => (/* binding */ publicKeyB64FromEd25519PublicKeyB64),\n/* harmony export */   serializeEncryptionResult: () => (/* binding */ serializeEncryptionResult),\n/* harmony export */   serializePublicKeyB64: () => (/* binding */ serializePublicKeyB64),\n/* harmony export */   serializeSignatureB64: () => (/* binding */ serializeSignatureB64),\n/* harmony export */   signWithEd25519SecretKey: () => (/* binding */ signWithEd25519SecretKey),\n/* harmony export */   toKey: () => (/* binding */ toKey),\n/* harmony export */   verifyEnvelopeSignature: () => (/* binding */ verifyEnvelopeSignature),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature)\n/* harmony export */ });\n/* harmony import */ var _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aptos-labs/ts-sdk */ \"(ssr)/./node_modules/@aptos-labs/ts-sdk/dist/esm/index.mjs\");\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tweetnacl */ \"(ssr)/./node_modules/tweetnacl/nacl-fast.js\");\n/* harmony import */ var ed2curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ed2curve */ \"(ssr)/./node_modules/ed2curve/ed2curve.js\");\n/* harmony import */ var _aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aptos-connect/wallet-api */ \"(ssr)/./node_modules/@aptos-connect/wallet-api/dist/index.mjs\");\n// src/encrDecr.ts\n\n\n\n\n\n// src/errors.ts\nvar EncryptionEnvelopeError = class extends Error {\n};\nvar EnvelopeMessageMismatchError = class _EnvelopeMessageMismatchError extends EncryptionEnvelopeError {\n  constructor(message, field) {\n    super(message);\n    this.field = field;\n    this.name = \"EnvelopeMessageMismatchError\";\n    Object.setPrototypeOf(this, _EnvelopeMessageMismatchError.prototype);\n  }\n};\nvar DecryptionError = class _DecryptionError extends EncryptionEnvelopeError {\n  constructor(message) {\n    super(message);\n    this.name = \"DecryptionError\";\n    Object.setPrototypeOf(this, _DecryptionError.prototype);\n  }\n};\n\n// src/utils.ts\n\nvar KeyTypes = /* @__PURE__ */ ((KeyTypes2) => {\n  KeyTypes2[\"Ed25519PublicKey\"] = \"Ed25519PublicKey\";\n  KeyTypes2[\"Ed25519SecretKey\"] = \"Ed25519SecretKey\";\n  KeyTypes2[\"X25519PublicKey\"] = \"X25519PublicKey\";\n  KeyTypes2[\"X25519SecretKey\"] = \"X25519SecretKey\";\n  return KeyTypes2;\n})(KeyTypes || {});\nfunction createX25519KeyPair() {\n  return keypairToX25519(tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.keyPair());\n}\nfunction createEd25519KeyPair() {\n  return keypairToEd25519(tweetnacl__WEBPACK_IMPORTED_MODULE_1__.sign.keyPair());\n}\nfunction toKey(rawKey, type) {\n  return {\n    key: rawKey,\n    type\n  };\n}\nfunction keypairToEd25519(keyPair) {\n  return {\n    publicKey: toKey(keyPair.publicKey, \"Ed25519PublicKey\" /* Ed25519PublicKey */),\n    secretKey: toKey(keyPair.secretKey, \"Ed25519SecretKey\" /* Ed25519SecretKey */)\n  };\n}\nfunction keypairToX25519(keyPair) {\n  return {\n    publicKey: toKey(keyPair.publicKey, \"X25519PublicKey\" /* X25519PublicKey */),\n    secretKey: toKey(keyPair.secretKey, \"X25519SecretKey\" /* X25519SecretKey */)\n  };\n}\nfunction aptosAccountToEd25519Keypair(account) {\n  return ed25519KeypairFromSecret(account.signingKey.secretKey);\n}\nfunction ed25519KeypairFromSecret(ed25519SecretKeyBytes) {\n  return keypairToEd25519(tweetnacl__WEBPACK_IMPORTED_MODULE_1__.sign.keyPair.fromSeed(ed25519SecretKeyBytes.slice(0, 32)));\n}\nfunction decodeBase64(base64Str) {\n  if (globalThis.Buffer) {\n    return new Uint8Array(Buffer.from(base64Str, \"base64\"));\n  }\n  return Uint8Array.from(atob(base64Str), (m) => m.codePointAt(0));\n}\nfunction encodeBase64(bytes) {\n  if (globalThis.Buffer) {\n    return Buffer.from(bytes).toString(\"base64\");\n  }\n  return btoa(Array.from(bytes, (x) => String.fromCodePoint(x)).join(\"\"));\n}\nfunction concatUint8array(arrayOne, arrayTwo) {\n  const mergedArray = new Uint8Array(arrayOne.length + arrayTwo.length);\n  mergedArray.set(arrayOne);\n  mergedArray.set(arrayTwo, arrayOne.length);\n  return mergedArray;\n}\n\n// src/encrDecr.ts\nvar SIGNATURE_PREFIX = \"APTOS::IDENTITY_CONNECT\";\nfunction convertEd25519PublicKeyToX25519PublicKey(ed25519PublicKey, errorKeyName) {\n  const x25519PublicKey = ed2curve__WEBPACK_IMPORTED_MODULE_2__.convertPublicKey(ed25519PublicKey.key.slice(0, 32));\n  if (!x25519PublicKey)\n    throw new Error(`${errorKeyName} is not a valid Ed25519 public key`);\n  return toKey(x25519PublicKey, \"X25519PublicKey\" /* X25519PublicKey */);\n}\nfunction convertEd25519SecretKeyToX25519SecretKey(ed25519SecretKey) {\n  const x25519SecretKey = ed2curve__WEBPACK_IMPORTED_MODULE_2__.convertSecretKey(ed25519SecretKey.key.slice(0, 32));\n  return toKey(x25519SecretKey, \"X25519SecretKey\" /* X25519SecretKey */);\n}\nfunction serializeEncryptionResult(enc) {\n  return {\n    nonceB64: encodeBase64(enc.nonce),\n    securedB64: encodeBase64(enc.secured)\n  };\n}\nfunction deserializeEncryptionResult(enc) {\n  return {\n    nonce: decodeBase64(enc.nonceB64),\n    secured: decodeBase64(enc.securedB64)\n  };\n}\nfunction decryptSerializedEncryptionResult(senderX25519PublicKey, receiverEd25519SecretKey, enc) {\n  const des = deserializeEncryptionResult(enc);\n  return decryptObject(senderX25519PublicKey, receiverEd25519SecretKey, des.secured, des.nonce);\n}\nfunction decryptSerializedEncryptionResultDirect(senderX25519PublicKey, receiverX25519SecretKey, enc) {\n  const des = deserializeEncryptionResult(enc);\n  return decryptObjectDirect(senderX25519PublicKey, receiverX25519SecretKey, des.secured, des.nonce);\n}\nfunction encryptMessage(senderX25519SecretKey, receiverEd25519PublicKey, message) {\n  const receiverX25519PublicKey = convertEd25519PublicKeyToX25519PublicKey(\n    receiverEd25519PublicKey,\n    \"receiver public key\"\n  );\n  return encryptMessageDirect(senderX25519SecretKey, receiverX25519PublicKey, message);\n}\nfunction encryptMessageDirect(senderX25519SecretKey, receiverX25519PublicKey, message) {\n  const nonce = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.randomBytes(tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.nonceLength);\n  const messageUint8 = new TextEncoder().encode(message);\n  const secured = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box(messageUint8, nonce, receiverX25519PublicKey.key, senderX25519SecretKey.key.slice(0, 32));\n  return { nonce, secured };\n}\nfunction encryptObject(senderX25519SecretKey, receiverEd25519PublicKey, message) {\n  const receiverX25519PublicKey = convertEd25519PublicKeyToX25519PublicKey(\n    receiverEd25519PublicKey,\n    \"receiver public key\"\n  );\n  return encryptObjectDirect(senderX25519SecretKey, receiverX25519PublicKey, message);\n}\nfunction encryptObjectDirect(senderX25519SecretKey, receiverX25519PublicKey, message) {\n  return encryptMessageDirect(senderX25519SecretKey, receiverX25519PublicKey, JSON.stringify(message));\n}\nfunction decryptMessage(senderX25519PublicKey, receiverEd25519SecretKey, securedMessage, nonce) {\n  const receiverX25519SecretKey = convertEd25519SecretKeyToX25519SecretKey(receiverEd25519SecretKey);\n  return decryptMessageDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce);\n}\nfunction decryptMessageDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce) {\n  let decryptedUint8;\n  try {\n    decryptedUint8 = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.open(\n      securedMessage,\n      nonce,\n      senderX25519PublicKey.key.slice(0, 32),\n      receiverX25519SecretKey.key.slice(0, 32)\n    );\n  } catch (e) {\n    throw new DecryptionError(`Could not decrypt message: ${e.message}`);\n  }\n  if (!decryptedUint8)\n    throw new DecryptionError(\"Could not decrypt message\");\n  return new TextDecoder().decode(decryptedUint8);\n}\nfunction decryptObject(senderX25519PublicKey, receiverEd25519SecretKey, securedMessage, nonce) {\n  const receiverX25519SecretKey = convertEd25519SecretKeyToX25519SecretKey(receiverEd25519SecretKey);\n  return decryptObjectDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce);\n}\nfunction decryptObjectDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce) {\n  const decryptedStr = decryptMessageDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce);\n  return JSON.parse(decryptedStr);\n}\nfunction messageHash(message, purpose) {\n  const signaturePrefixHash = new Uint8Array((0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256)(`${SIGNATURE_PREFIX}::${purpose}::`));\n  return new Uint8Array((0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256)(concatUint8array(signaturePrefixHash, message)));\n}\nfunction signWithEd25519SecretKey(message, signingEd25519SecretKey, purpose) {\n  return tweetnacl__WEBPACK_IMPORTED_MODULE_1__.sign.detached(messageHash(message, purpose), signingEd25519SecretKey.key);\n}\nfunction makeEd25519SecretKeySignCallbackNoDomainSeparation(signingEd25519SecretKey) {\n  return async (message) => new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature(tweetnacl__WEBPACK_IMPORTED_MODULE_1__.sign.detached(message, signingEd25519SecretKey.key));\n}\nfunction verifySignature(message, signature, signingPublicKey, purpose) {\n  return signingPublicKey.verifySignature({ message: messageHash(message, purpose), signature });\n}\nfunction hashAndVerifySignature(message, signature, signingPublicKey, purpose) {\n  const messageUint8 = message instanceof Uint8Array ? message : new TextEncoder().encode(message);\n  const messageUint8Hash = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256)(messageUint8);\n  return verifySignature(messageUint8Hash, signature, signingPublicKey, purpose);\n}\n\n// src/securedEnvelope.ts\n\n\nvar REQUIRED_FIELDS = [\n  \"receiverEd25519PublicKeyB64\",\n  \"senderEd25519PublicKeyB64\",\n  \"senderX25519PublicKeyB64\",\n  \"sequence\",\n  \"timestampMillis\"\n].sort();\nfunction ensurePrivatePublicFieldsDisjoint(privateMessage, publicMessage) {\n  const intersection = Object.keys(privateMessage).filter((x) => Object.keys(publicMessage).includes(x));\n  if (intersection.length > 0) {\n    const field = intersection[0];\n    throw new EnvelopeMessageMismatchError(`Field ${field} appears in both private and public message fields`, field);\n  }\n}\nfunction ensureMetadataFields(message) {\n  const messageKeys = Object.keys(message).sort();\n  const extraFields = messageKeys.filter((key) => !REQUIRED_FIELDS.includes(key));\n  const missingFields = REQUIRED_FIELDS.filter((key) => !messageKeys.includes(key));\n  if (extraFields.length > 0 || missingFields.length > 0) {\n    let extraFieldsStr = extraFields.length > 0 ? `extra(${extraFields.join(\", \")})` : \"\";\n    const missingFieldsStr = missingFields.length > 0 ? `missing(${missingFields.join(\", \")})` : \"\";\n    extraFieldsStr = extraFieldsStr.length > 0 && missingFieldsStr.length > 0 ? `${extraFieldsStr}, ` : extraFieldsStr;\n    throw new EnvelopeMessageMismatchError(\n      `PublicMessage metadata fields do not conform to spec: ${extraFieldsStr}${missingFieldsStr}`,\n      \"_metadata\"\n    );\n  }\n}\nfunction deserializeTransportEnvelope(transportEnvelope) {\n  const publicMessage = JSON.parse(transportEnvelope.serializedPublicMessage);\n  return {\n    ...transportEnvelope,\n    publicMessage\n  };\n}\nfunction encryptAndSignEnvelope(senderEd25519SecretKey, senderEd25519PublicKey, receiverEd25519PublicKey, sequence, publicMessage, privateMessage) {\n  const senderEphemeralX25519KeyPair = createX25519KeyPair();\n  const metadata = constructMetadata(\n    senderEd25519PublicKey,\n    receiverEd25519PublicKey,\n    sequence,\n    senderEphemeralX25519KeyPair.publicKey\n  );\n  ensureMetadataFields(metadata);\n  ensurePrivatePublicFieldsDisjoint(privateMessage, publicMessage);\n  return dangerouslyEncryptAndSignEnvelopeUnvalidated(\n    senderEd25519SecretKey,\n    receiverEd25519PublicKey,\n    metadata,\n    privateMessage,\n    publicMessage,\n    senderEphemeralX25519KeyPair\n  );\n}\nfunction constructMetadata(senderEd25519PublicKey, receiverEd25519PublicKey, sequence, senderEphemeralX25519PublicKey) {\n  return {\n    receiverEd25519PublicKeyB64: encodeBase64(receiverEd25519PublicKey.key),\n    senderEd25519PublicKeyB64: encodeBase64(senderEd25519PublicKey.key),\n    senderX25519PublicKeyB64: encodeBase64(senderEphemeralX25519PublicKey.key),\n    sequence,\n    timestampMillis: Date.now()\n  };\n}\nfunction dangerouslyEncryptAndSignEnvelopeUnvalidated(senderEd25519SecretKey, receiverEd25519PublicKey, metadata, privateMessage, publicMessage, senderEphemeralX25519KeyPair) {\n  const encryptionResult = encryptObject(\n    senderEphemeralX25519KeyPair.secretKey,\n    receiverEd25519PublicKey,\n    privateMessage\n  );\n  const encryptedPrivateMessage = serializeEncryptionResult(encryptionResult);\n  const encryptedPrivateMessageBytes = decodeBase64(encryptedPrivateMessage.securedB64);\n  const serializedPublicMessage = JSON.stringify({ ...publicMessage, _metadata: metadata });\n  const publicMessageBytes = new TextEncoder().encode(serializedPublicMessage);\n  const messageSignature = signEnvelope(publicMessageBytes, encryptedPrivateMessageBytes, senderEd25519SecretKey);\n  return {\n    encryptedPrivateMessage,\n    messageSignature,\n    serializedPublicMessage\n  };\n}\nfunction combineHashedEnvelopeMessageBytes(publicMessageBytes, privateMessageBytes) {\n  const publicMessageBytesHash = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256)(publicMessageBytes);\n  const privateMessageBytesHash = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256)(privateMessageBytes);\n  const combinedHash = new Uint8Array(publicMessageBytesHash.length + privateMessageBytesHash.length);\n  combinedHash.set(publicMessageBytesHash);\n  combinedHash.set(privateMessageBytesHash, publicMessageBytesHash.length);\n  return (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256)(combinedHash);\n}\nfunction signEnvelope(publicMessageBytes, privateMessageBytes, senderEd25519SecretKey) {\n  const messageHashBytes = combineHashedEnvelopeMessageBytes(publicMessageBytes, privateMessageBytes);\n  const signatureBytes = signWithEd25519SecretKey(messageHashBytes, senderEd25519SecretKey, \"SECURED_ENVELOPE\");\n  return _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Hex.fromHexInput(signatureBytes).toString();\n}\nfunction verifyEnvelopeSignature(publicMessageBytes, privateMessageBytes, messageSignatureInput, senderEd25519PublicKey) {\n  const messageSignature = new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Hex.fromHexInput(messageSignatureInput).toUint8Array());\n  const senderPublicKey = new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey(senderEd25519PublicKey.key);\n  const messageHashBytes = combineHashedEnvelopeMessageBytes(publicMessageBytes, privateMessageBytes);\n  const messageVerified = verifySignature(messageHashBytes, messageSignature, senderPublicKey, \"SECURED_ENVELOPE\");\n  if (!messageVerified) {\n    throw new EnvelopeMessageMismatchError(\"Could not verify SecuredEnvelope signature\", \"messageSignature\");\n  }\n}\nfunction decryptEnvelope(senderEd25519PublicKey, receiverEd25519SecretKey, message) {\n  const { encryptedPrivateMessage, messageSignature, serializedPublicMessage } = message;\n  const publicMessage = JSON.parse(serializedPublicMessage);\n  const rawPrivateMessage = decodeBase64(encryptedPrivateMessage.securedB64);\n  const rawPublicMessage = new TextEncoder().encode(serializedPublicMessage);\n  verifyEnvelopeSignature(rawPublicMessage, rawPrivateMessage, messageSignature, senderEd25519PublicKey);\n  const senderEd25519PublicKeyB64 = encodeBase64(senderEd25519PublicKey.key);\n  const expectedPublicKeyB64 = publicMessage._metadata.senderEd25519PublicKeyB64;\n  if (senderEd25519PublicKeyB64 !== expectedPublicKeyB64) {\n    throw new EnvelopeMessageMismatchError(\n      \"senderEd25519PublicKey in envelope does not match provided receiverEd25519SecretKey\",\n      \"senderPublicKey\"\n    );\n  }\n  const senderX25519PublicKeyBytes = decodeBase64(publicMessage._metadata.senderX25519PublicKeyB64);\n  const senderX25519PublicKey = toKey(senderX25519PublicKeyBytes, \"X25519PublicKey\" /* X25519PublicKey */);\n  const encryptionResult = deserializeEncryptionResult(encryptedPrivateMessage);\n  const privateMessage = decryptObject(\n    senderX25519PublicKey,\n    receiverEd25519SecretKey,\n    encryptionResult.secured,\n    encryptionResult.nonce\n  );\n  ensureMetadataFields(publicMessage._metadata);\n  ensurePrivatePublicFieldsDisjoint(privateMessage, publicMessage);\n  return {\n    messageSignature,\n    privateMessage,\n    publicMessage\n  };\n}\n\n// src/serialization.ts\n\n\nfunction serializePublicKeyB64(publicKey) {\n  const serializer = new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n  (0,_aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__.serializePublicKey)(serializer, publicKey);\n  return (0,_aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__.bytesToBase64)(serializer.toUint8Array());\n}\nfunction deserializePublicKeyB64(publicKeyB64) {\n  const serializedPublicKey = (0,_aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__.base64ToBytes)(publicKeyB64);\n  const deserializer = new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Deserializer(serializedPublicKey);\n  return (0,_aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__.deserializePublicKey)(deserializer);\n}\nfunction deserializeEd25519PublicKeyB64(ed25519PublicKeyB64) {\n  return new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey(decodeBase64(ed25519PublicKeyB64));\n}\nfunction serializeSignatureB64(signature) {\n  const serializer = new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n  (0,_aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__.serializeSignature)(serializer, signature);\n  return (0,_aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__.bytesToBase64)(serializer.toUint8Array());\n}\nfunction deserializeSignatureB64(signatureB64) {\n  const serializedSignature = (0,_aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__.base64ToBytes)(signatureB64);\n  const deserializer = new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Deserializer(serializedSignature);\n  return (0,_aptos_connect_wallet_api__WEBPACK_IMPORTED_MODULE_4__.deserializeSignature)(deserializer);\n}\nfunction deserializeEd25519SignatureB64(ed25519SignatureB64) {\n  const signatureBytes = _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Hex.fromHexInput(ed25519SignatureB64).toUint8Array();\n  return new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature(signatureBytes);\n}\nfunction publicKeyB64FromEd25519PublicKeyB64(ed25519PublicKeyB64) {\n  const publicKey = deserializeEd25519PublicKeyB64(ed25519PublicKeyB64);\n  return serializePublicKeyB64(publicKey);\n}\n\n// src/walletAccounts.ts\n\n\nvar AccountConnectionAction = /* @__PURE__ */ ((AccountConnectionAction2) => {\n  AccountConnectionAction2[\"ADD\"] = \"add\";\n  AccountConnectionAction2[\"REMOVE\"] = \"remove\";\n  return AccountConnectionAction2;\n})(AccountConnectionAction || {});\nfunction deriveAccountTransportEd25519Keypair(ed25519SecretKeyOrSignCallback, publicKey) {\n  const publicKeyBytes = publicKey instanceof _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.PublicKey ? publicKey.toUint8Array() : publicKey.key;\n  if (ed25519SecretKeyOrSignCallback instanceof Function) {\n    const seedGeneratorBytes = messageHash(publicKeyBytes, \"TRANSPORT_KEYPAIR\");\n    const signature = ed25519SecretKeyOrSignCallback(seedGeneratorBytes);\n    if (signature instanceof Promise) {\n      return signature.then((value) => ed25519KeypairFromSecret(value.toUint8Array()));\n    }\n    return ed25519KeypairFromSecret(signature.toUint8Array());\n  }\n  const seedBytes = signWithEd25519SecretKey(publicKeyBytes, ed25519SecretKeyOrSignCallback, \"TRANSPORT_KEYPAIR\");\n  return ed25519KeypairFromSecret(seedBytes);\n}\nfunction createSerializedAccountInfo(...[\n  signCallback,\n  publicKey,\n  transportEd25519PublicKey,\n  action,\n  intentId,\n  accountAddress\n]) {\n  const authKey = publicKey.authKey();\n  const finalAccountAddress = accountAddress || authKey.derivedAddress().toString();\n  const publicKeyB64 = serializePublicKeyB64(publicKey);\n  const accountInfo = {\n    accountAddress: finalAccountAddress,\n    action,\n    intentId,\n    publicKeyB64,\n    timestampMillis: Date.now(),\n    transportEd25519PublicKeyB64: encodeBase64(transportEd25519PublicKey.key)\n  };\n  const accountInfoSerialized = JSON.stringify(accountInfo);\n  const accountInfoBytes = new TextEncoder().encode(accountInfoSerialized);\n  const accountInfoHash = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256)(accountInfoBytes);\n  const signature = signCallback(messageHash(accountInfoHash, \"ACCOUNT_INFO\"));\n  if (signature instanceof Promise) {\n    return signature.then((value) => ({\n      accountInfoSerialized,\n      signatureB64: serializeSignatureB64(value)\n    }));\n  }\n  return {\n    accountInfoSerialized,\n    signatureB64: serializeSignatureB64(signature)\n  };\n}\nasync function aptosAccountToSerializedInfo(account, intentId) {\n  const signCallback = async (data) => account.sign(data);\n  const transportKey = await deriveAccountTransportEd25519Keypair(signCallback, account.publicKey);\n  return createSerializedAccountInfo(\n    signCallback,\n    account.publicKey,\n    transportKey.publicKey,\n    \"add\" /* ADD */,\n    intentId\n  );\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@identity-connect/crypto/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@identity-connect/wallet-api/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@identity-connect/wallet-api/dist/index.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bcsDeserialize: () => (/* binding */ bcsDeserialize),\n/* harmony export */   bcsSerialize: () => (/* binding */ bcsSerialize),\n/* harmony export */   deserializeJsonTransactionPayload: () => (/* binding */ deserializeJsonTransactionPayload),\n/* harmony export */   deserializeRawTransaction: () => (/* binding */ deserializeRawTransaction),\n/* harmony export */   deserializeSignAndSubmitTransactionRequestArgs: () => (/* binding */ deserializeSignAndSubmitTransactionRequestArgs),\n/* harmony export */   deserializeSignTransactionRequestArgs: () => (/* binding */ deserializeSignTransactionRequestArgs),\n/* harmony export */   deserializeSignTransactionResponseArgs: () => (/* binding */ deserializeSignTransactionResponseArgs),\n/* harmony export */   isBcsSerializable: () => (/* binding */ isBcsSerializable),\n/* harmony export */   makeFullMessage: () => (/* binding */ makeFullMessage),\n/* harmony export */   serializeJsonTransactionPayload: () => (/* binding */ serializeJsonTransactionPayload),\n/* harmony export */   serializeRawTransaction: () => (/* binding */ serializeRawTransaction),\n/* harmony export */   serializeSignAndSubmitTransactionRequestArgs: () => (/* binding */ serializeSignAndSubmitTransactionRequestArgs),\n/* harmony export */   serializeSignTransactionRequestArgs: () => (/* binding */ serializeSignTransactionRequestArgs),\n/* harmony export */   serializeSignTransactionResponseArgs: () => (/* binding */ serializeSignTransactionResponseArgs)\n/* harmony export */ });\n/* harmony import */ var _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aptos-labs/ts-sdk */ \"(ssr)/./node_modules/@aptos-labs/ts-sdk/dist/esm/index.mjs\");\n/* harmony import */ var aptos__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aptos */ \"(ssr)/./node_modules/aptos/dist/index.mjs\");\n// src/serialization/bcsSerialization.ts\n\n\nfunction isBcsSerializableV1(value) {\n  return value?.serialize !== void 0;\n}\nfunction isBcsSerializableV2(value) {\n  return value?.serialize !== void 0 && value?.bcsToBytes !== void 0 && value?.bcsToHex !== void 0;\n}\nfunction isBcsSerializable(value) {\n  return isBcsSerializableV1(value) || isBcsSerializableV2(value);\n}\nfunction bcsSerialize(serializable) {\n  if (isBcsSerializableV2(serializable)) {\n    return serializable.bcsToHex().toString();\n  }\n  const serializedValueBytes = aptos__WEBPACK_IMPORTED_MODULE_1__.BCS.bcsToBytes(serializable);\n  return _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Hex.fromHexInput(serializedValueBytes).toString();\n}\nfunction bcsDeserialize(deserializableClass, serializedValue) {\n  const serializedValueBytes = _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Hex.fromHexString(serializedValue).toUint8Array();\n  const deserializer = new _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Deserializer(serializedValueBytes);\n  return deserializableClass.deserialize(deserializer);\n}\n\n// src/serialization/jsonPayload.ts\n\n\n// src/serialization/error.ts\nvar UnexpectedValueError = class _UnexpectedValueError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"UnexpectedValueError\";\n    Object.setPrototypeOf(this, _UnexpectedValueError.prototype);\n  }\n};\n\n// src/serialization/jsonPayload.ts\nfunction isSerializedUint8Array(arg) {\n  return arg?.type === \"Uint8Array\" && typeof arg?.value === \"string\";\n}\nfunction serializeEntryFunctionArg(arg) {\n  if (arg instanceof Uint8Array) {\n    return {\n      type: \"Uint8Array\",\n      value: _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Hex.fromHexInput(arg).toString()\n    };\n  }\n  if (Array.isArray(arg)) {\n    return arg.map(serializeEntryFunctionArg);\n  }\n  return arg;\n}\nfunction deserializeEntryFunctionArg(arg) {\n  if (isSerializedUint8Array(arg)) {\n    return _aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.Hex.fromHexInput(arg.value).toUint8Array();\n  }\n  if (Array.isArray(arg)) {\n    return arg.map(deserializeEntryFunctionArg);\n  }\n  return arg;\n}\nfunction serializeEntryFunctionPayload(payload) {\n  const normalizedArgs = payload.arguments.map(serializeEntryFunctionArg);\n  return {\n    ...payload,\n    arguments: normalizedArgs,\n    type: \"entry_function_payload\"\n  };\n}\nfunction deserializeEntryFunctionPayload(payload) {\n  const deserializedArgs = payload.arguments.map(deserializeEntryFunctionArg);\n  return {\n    ...payload,\n    arguments: deserializedArgs,\n    type: \"entry_function_payload\"\n  };\n}\nfunction serializeJsonTransactionPayload(payload) {\n  if (payload.type === \"entry_function_payload\" || payload.type === void 0) {\n    return serializeEntryFunctionPayload(payload);\n  }\n  if (payload.type === \"multisig_payload\") {\n    const innerPayload = payload.transaction_payload !== void 0 ? serializeEntryFunctionPayload(payload.transaction_payload) : void 0;\n    return { ...payload, transaction_payload: innerPayload };\n  }\n  throw new UnexpectedValueError();\n}\nfunction deserializeJsonTransactionPayload(payload) {\n  if (payload.type === \"entry_function_payload\" || payload.type === void 0) {\n    return deserializeEntryFunctionPayload(payload);\n  }\n  if (payload.type === \"multisig_payload\") {\n    const innerPayload = payload.transaction_payload !== void 0 ? deserializeEntryFunctionPayload(payload.transaction_payload) : void 0;\n    return { ...payload, transaction_payload: innerPayload };\n  }\n  throw new UnexpectedValueError();\n}\n\n// src/serialization/rawTxn.ts\n\nfunction serializeRawTransaction(rawTxn) {\n  const value = bcsSerialize(rawTxn);\n  if (\"fee_payer_address\" in rawTxn) {\n    return { type: \"fee_payer_raw_txn\", value };\n  }\n  if (\"secondary_signer_addresses\" in rawTxn) {\n    return { type: \"multi_agent_raw_txn\", value };\n  }\n  if (\"chain_id\" in rawTxn) {\n    return { type: \"raw_txn\", value };\n  }\n  throw new UnexpectedValueError(\"Invalid raw transaction type\");\n}\nfunction deserializeRawTransaction(serialized) {\n  switch (serialized.type) {\n    case \"raw_txn\":\n      return bcsDeserialize(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.RawTransaction, serialized.value);\n    case \"fee_payer_raw_txn\":\n      return bcsDeserialize(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.RawTransactionWithData, serialized.value);\n    case \"multi_agent_raw_txn\":\n      return bcsDeserialize(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.RawTransactionWithData, serialized.value);\n    default:\n      throw new UnexpectedValueError(\"Invalid raw transaction type\");\n  }\n}\n\n// src/serialization/signAndSubmitTransactionRequestArgs.ts\n\nfunction serializeSignAndSubmitTransactionRequestArgs(args) {\n  if (\"payload\" in args) {\n    const serializedPayload = isBcsSerializable(args.payload) ? bcsSerialize(args.payload) : serializeJsonTransactionPayload(args.payload);\n    return { options: args.options, payload: serializedPayload };\n  }\n  if (\"feePayerAuthenticator\" in args) {\n    return {\n      feePayerAuthenticator: bcsSerialize(args.feePayerAuthenticator),\n      rawTxn: serializeRawTransaction(args.rawTxn)\n    };\n  }\n  if (\"rawTxn\" in args) {\n    return { rawTxn: serializeRawTransaction(args.rawTxn) };\n  }\n  throw new UnexpectedValueError();\n}\nfunction deserializeSignAndSubmitTransactionRequestArgs(args) {\n  if (\"payload\" in args) {\n    const payload = typeof args.payload === \"string\" ? bcsDeserialize(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.TransactionPayload, args.payload) : deserializeJsonTransactionPayload(args.payload);\n    return { options: args.options, payload };\n  }\n  if (\"feePayerAuthenticator\" in args) {\n    const deserializedRawTxn = deserializeRawTransaction(args.rawTxn);\n    const feePayerAuthenticator = bcsDeserialize(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.AccountAuthenticator, args.feePayerAuthenticator);\n    return { feePayerAuthenticator, rawTxn: deserializedRawTxn };\n  }\n  if (\"rawTxn\" in args) {\n    const deserializedRawTxn = deserializeRawTransaction(args.rawTxn);\n    return { rawTxn: deserializedRawTxn };\n  }\n  throw new UnexpectedValueError();\n}\n\n// src/serialization/signTransactionRequestArgs.ts\n\nfunction serializeSignTransactionRequestArgs(args) {\n  if (\"payload\" in args) {\n    const serializedPayload = isBcsSerializable(args.payload) ? bcsSerialize(args.payload) : serializeJsonTransactionPayload(args.payload);\n    return { options: args.options, payload: serializedPayload };\n  }\n  if (\"rawTxn\" in args) {\n    const serializedRawTxn = serializeRawTransaction(args.rawTxn);\n    return { rawTxn: serializedRawTxn };\n  }\n  throw new UnexpectedValueError();\n}\nfunction deserializeSignTransactionRequestArgs(args) {\n  if (\"payload\" in args) {\n    const payload = typeof args.payload === \"string\" ? bcsDeserialize(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.TransactionPayload, args.payload) : deserializeJsonTransactionPayload(args.payload);\n    return { options: args.options, payload };\n  }\n  if (\"rawTxn\" in args) {\n    const deserializedRawTxn = deserializeRawTransaction(args.rawTxn);\n    return { rawTxn: deserializedRawTxn };\n  }\n  throw new UnexpectedValueError();\n}\n\n// src/serialization/signTransactionResponseArgs.ts\n\nfunction serializeSignTransactionResponseArgs(args) {\n  const accountAuthenticator = bcsSerialize(args.accountAuthenticator);\n  if (\"rawTxn\" in args) {\n    const rawTxn = bcsSerialize(args.rawTxn);\n    return { accountAuthenticator, rawTxn };\n  }\n  return { accountAuthenticator };\n}\nfunction deserializeSignTransactionResponseArgs(args) {\n  const accountAuthenticator = bcsDeserialize(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.AccountAuthenticator, args.accountAuthenticator);\n  if (\"rawTxn\" in args) {\n    const rawTxn = bcsDeserialize(_aptos_labs_ts_sdk__WEBPACK_IMPORTED_MODULE_0__.RawTransaction, args.rawTxn);\n    return { accountAuthenticator, rawTxn };\n  }\n  return { accountAuthenticator };\n}\n\n// src/utils/makeFullMessage.ts\nvar prefix = \"APTOS\";\nfunction makeFullMessage(params, flags) {\n  let fullMessage = prefix;\n  if (flags.address) {\n    fullMessage += `\naddress: ${params.address}`;\n  }\n  if (flags.application) {\n    fullMessage += `\napplication: ${params.application}`;\n  }\n  if (flags.chainId) {\n    fullMessage += `\nchainId: ${params.chainId}`;\n  }\n  fullMessage += `\nmessage: ${params.message}`;\n  fullMessage += `\nnonce: ${params.nonce}`;\n  return {\n    fullMessage,\n    prefix\n  };\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@identity-connect/wallet-api/dist/index.mjs\n");

/***/ })

};
;