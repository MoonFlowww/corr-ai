environment:
  model_name: "gpt-3.5-turbo"
  temperature: 0
  openai_base_url: "https://api.openai-sb.com/v1"
  openai_api_key: "sb-c4555dc97b5732dc0bed25d8650d4b3fc53fac2ae54e84ee"
  neo4j_uri: "neo4j+s://b21b5510.databases.neo4j.io"
  neo4j_username: "neo4j"
  neo4j_password: "wmGT6XuzYcjSaO_u1sqD3qJsk-IXuWBQwKWeOlS3OUo"

# 文档处理配置
document_processing:
  chunk_size: 512  # 每个文本块的最大字符数
  overlap: 50  # 每个文本块之间的重叠部分

# 向量索引配置
vector_index:
  index_type: "faiss"  # 选择向量索引类型（faiss 或 neo4j）
  faiss_index_file: "faiss_index.index"  # FAISS 索引文件路径
  embedding_model: "sentence-transformers/all-MiniLM-L6-v2"  # 用于向量化的模型

# Neo4j 配置
neo4j_graph:
  uri: "neo4j://localhost:7687"
  username: "neo4j"
  password: "your_neo4j_password"
  connection_pool_size: 20  # 连接池大小

# LLM 配置
llm:
  model_name: "gpt-4-0125-preview"  # GPT 模型的名称
  temperature: 0  # 生成文本时的温度参数

# API 配置
api:
  host: "0.0.0.0"
  port: 8000
  api_prefix: "/v1"

# 日志配置
logging:
  level: "INFO"  # 可选: DEBUG, INFO, WARNING, ERROR, CRITICAL
  log_file: "rag_system.log"

# 其他服务配置（如缓存、队列等）
cache:
  type: "redis"
  host: "localhost"
  port: 6379
  db: 0

# 监控与报警配置
monitoring:
  enabled: true
  endpoint: "http://localhost:9090"
  alert_thresholds:
    query_latency: 200  # ms
    error_rate: 5  # %
